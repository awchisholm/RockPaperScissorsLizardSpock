# -*- coding: utf-8 -*-
"""RockPaperScissorsLizardSpock

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XHgwa-aNVLnkGkrUSsG0Q-ZItjClPW4d
"""

import random
import pandas as pd
# What each player can choose
player_choices = ('Rock', 'Paper', 'Scissors', 'Lizard', 'Spock', 'Quit ')
computer_choices = ('Rock', 'Paper', 'Scissors', 'Lizard', 'Spock')
# Some constants to make the table look neater
Rock = 'Rock'
Paper = 'Paper'
Scissors = 'Scissors'
Lizard = 'Lizard'
Spock = 'Spock'
computer_wins = 'Computer wins'
player_wins = 'Player wins'
draw = 'Draw'

# Make a data frame with all the possible combinations
# The column names will be 
#  Computer   Player    Result
game_logic_list = \
  [\
   [Rock,     Rock,     draw], 
   [Rock,     Paper,    player_wins], 
   [Rock,     Scissors, computer_wins],
   [Rock,     Lizard,   computer_wins],
   [Rock,     Spock,    player_wins],
   [Paper,    Rock,     computer_wins],
   [Paper,    Paper,    draw],
   [Paper,    Scissors, player_wins],
   [Paper,    Lizard,   player_wins],
   [Paper,    Spock,    computer_wins],
   [Scissors, Rock,     player_wins],
   [Scissors, Paper,    computer_wins],
   [Scissors, Scissors, draw],
   [Scissors, Lizard,   computer_wins],
   [Scissors, Spock,    player_wins],
   [Lizard,   Rock,     player_wins],
   [Lizard,   Paper,    computer_wins],
   [Lizard,   Scissors, player_wins],
   [Lizard,   Lizard,   draw],
   [Lizard,   Spock,    computer_wins],
   [Spock,    Rock,     computer_wins],
   [Spock,    Paper,    computer_wins],
   [Spock,    Scissors, computer_wins],
   [Spock,    Lizard,   computer_wins],
   [Spock,    Spock,    draw],
  ]
game_logic = pd.DataFrame(game_logic_list, columns=['Computer', 'Player', 'Result'])

# Ask the user for their name
player_name = input("enter name ")
computer_name = 'Computer'
computer_score = 0
player_score = 0
draws = 0
while True:
  # Get the player's choice
  player_choice = input(player_choices)
  if 'Quit' in player_choice:
    break       # Quit is valid
  if player_choice not in player_choices:
    continue    # If it's not in the list, go round again
  
  # Get the computer to choose 
  computer_choice = random.choice(computer_choices)
  computer_choice = game_logic[(game_logic['Player'] == player_choice) & (game_logic['Result'] == computer_wins)]['Computer'].values[0] 
  
  # Look up what the player and the computer chose to get the result
  result = game_logic[(game_logic['Player'] == player_choice) & (game_logic['Computer'] == computer_choice)]['Result'].values[0]
  # Add to the running totals
  if result == computer_wins:
    computer_score += 1
  if result == player_wins:
    player_score += 1
  if result == draw:
    draws = 1
  # print the result and the running totals
  print(f"[{player_name} chose {player_choice}] [{computer_name} chose {computer_choice}] [Result {result}]")
  print(f"Running totals: [{player_name}: {player_score}] [Computer: {computer_score}] [Draws: {draws}]")

# Print the final scores
print(f"Final totals: [{player_name}: {player_score}] [Computer: {computer_score}] [Draws: {draws}]")